{
  "title": "[MCP]免费最强版实践--引入MCP研究员打造AI因子全流程架构(附工作流)",
  "description": "先赞后看 工欲善其事，必先利其器， 强烈推荐前文： [MCP]免费最强版 Trae/VsCode + Cline + Gemini-cli 构建 cnhkmcp 使用环境...",
  "post_body": "先赞后看\n工欲善其事，必先利其器， 强烈推荐前文：\n[MCP]免费最强版 Trae/VsCode + Cline + Gemini-cli 构建 cnhkmcp 使用环境\nhttps://support.worldquantbrain.com/hc/zh-cn/community/posts/34338855618583\n一个好的AI驱动的MCP像是一个良师益友，共同学习共同进步，使用其他免费智障几个循环下来就再也没有兴趣研究MCP了。\n之前自己的架构里有相当部分权重是回测AI工厂生成的因子(由顾问课拓展)，再去做时序分组处理等。整体出货效率一般，但偶尔会触发暴击如低pc高fit，一直想去对AI工厂产生的因子做一步筛选但没有合适的通用方法，现在引入免费gemini2.5-pro驱动的MCP找到了问题的答案。\n通过多轮调教形成， Alpha因子快速定性评估工作流，当前流程如下：\n生成示例：\n分析报告包含经济学意义解释如图， 排序因子是完整列表\n后续：排序因子决策入选回测流程，及结果对比； 以及有没有可能实现全自动的方式完成全流程\n附训练好的工作流\n# Alpha因子快速定性评估工作流 (V11.0 - Validation-Enhanced & Complete)\n**核心理念:** 本文件是一个动态的、可扩展的一站式工作流指南。所有分析始于输入验证，并以平台为权威信息源。\n---\n## 第一部分：评估流程\n```mermaid\ngraph TD\nsubgraph \"输入 (Input)\"\nA[\"<b>1. 定义评估上下文</b>\"]\nB[\"<b>2. 提供因子表达式列表</b>\"]\nend\nsubgraph \"预处理 (Pre-processing)\"\nC{\"<b>0. 表达式合法性检查</b><br/>(语法/括号/参数检查)\"}\nend\nsubgraph \"处理 (Processing)\"\nD{1. Datafield/Operator探查} --> E{2. 经济学逻辑分类}\nE --> F{3. 经济学原理速评}\nF --> G{4. 表达式实现审查}\nG --> H{5. 综合定性排序}\nend\nsubgraph \"输出 (Output)\"\nI[\"分析报告 (.md)\"]\nJ[\"排序列表 (.py)\"]\nend\nA --> C\nB --> C\nC --> D\nH --> I\nH --> J\n```\n### **阶段一：输入 (Input)**\n此阶段定义了评估任务的所有前提条件。\n1. **定义评估上下文 (Define Evaluation Context):**\n***动作:** 为本次评估运行定义一组关键的上下文参数。这是所有后续分析的绝对前提。\n***必需参数:**\n*`instrument_type`: (e.g., 'EQUITY', 'FUTURES')\n*`region`: (e.g., 'ASI', 'USA', 'EUR')\n*`universe`: (e.g., 'TOP1000', 'MINVOL1M')\n*`delay`: (e.g., 1, 10)\n2. **提供因子表达式 (Provide Expressions):**\n***对象:** 一个包含待评估因子表达式的Python列表或文本文件。\n### **阶段二：预处理 (Pre-processing)**\n1. **表达式合法性检查 (Expression Legality Check):**\n***动作:** 在进行任何分析之前，对所有输入的表达式进行基础的语法扫描。\n***检查项:**\n***括号匹配:** 确保所有 `()` 都是成对闭合的。\n***操作符参数数量:** 检查基本操作符的参数数量是否正确（如 `divide(a, b)` 有两个参数，`log(a)` 有一个）。\n***基本语法:** 检查有无明显拼写错误或非法字符。\n***目的:** 过滤掉无效和格式错误的表达式，确保进入分析流程的都是语法有效的数据。\n### **阶段三：处理 (Processing)**\n1. **Datafield/Operator探查 (Field & Operator Exploration):**\n***动作:**\n1. 在分析前，首先识别表达式中所有独特的`datafield`和`operator`。\n2. 对于任何在附录中未记录的新条目，**必须优先从BRAIN平台（通过其文档或专用工具）获取其官方、精确的定义和含义。**\n***查询Datafield:** 使用 `get_datafields` 工具，并提供完整的上下文（`instrument_type`, `region`等）和`search`参数（字段名）。\n***查询Operator:** 使用 `get_operators` 工具。\n3. 将从平台获取的新知识，**更新并补充**到本文件的第二部分附录中。\n4. 参照更新后的附录，并结合当前评估上下文，进行后续分析。\n***目的:** 确保所有分析都基于来自官方源头的、最新、最准确的信息，并将新知识沉淀到我们的框架中。\n2. **经济学逻辑分类 (Classification):**\n***动作:** 将因子归入核心经济学类别（动量、反转、价值、质量等）。\n3. **经济学原理速评 (Rationale Quick-Scan):**\n***动作:** 评估每个因子的经济学“故事”的直观性、强度和潜在缺陷。\n4. **表达式实现审查 (Implementation Review):**\n***动作:** 检查`datafields`和`operators`是否简洁、合理地实现了经济学思想。\n5. **综合定性排序 (Qualitative Ranking):**\n***动作:** 基于经济学故事的说服力、表达式的优雅性和创新性，对因子进行分级排序。\n### **阶段四：输出 (Output)**\n* **原则:** 所有产出文件名中都应能体现其评估上下文，便于追溯。\n1. **分析报告 (Markdown):**\n***文件名格式:**`alpha_analysis_report_[region]_[universe]_YYYY-MM-DD.md`\n2. **排序列表 (Python):**\n***文件名格式:**`ranked_alphas_[region]_[universe]_YYYY-MM-DD.py`\n---\n## 第二部分：附录\n### **附录 A: 核心Datafield数据字典**\n* **注意:** 本字典是一个**动态文档**。在未来的研究中，当遇到新的、未被记录的`datafield`时，应**从平台获取定义**并在此处更新。\n* **注意:** 以下字段描述主要基于**EQUITY**类资产。\n#### anl69: 分析师共识数据 (Analyst Consensus)\n`anl69`系列数据代表了市场上多位分析师预测的**共识数据**。\n- **数据类型:** 通常为数值型 (Float)。\n- **更新周期:** 事件驱动。\n| Datafield | 描述 | 经济学意义 |\n| :--- | :--- | :--- |\n| **`..._ebitda_...`** | **税息折旧及摊销前利润 (EBITDA)** | 衡量公司核心业务的盈利能力。 |\n| **`..._sales_...`** | **销售收入 (Sales/Revenue)** | 衡量公司市场规模和成长性。 |\n| **`..._roe_...`** | **净资产收益率 (Return on Equity)** | 衡量公司为股东创造利润的能力。 |\n| **`..._roa_...`** | **总资产回报率 (Return on Assets)** | 衡量公司利用其所有资产创造利润的效率。 |\n| **`..._ptp_...`** | **税前利润 (Pre-Tax Profit)** | 公司在扣除利息和税款之前的利润。 |\n| **`..._ltg_...`** | **长期增长率 (Long-Term Growth)** | 分析师对公司未来EPS的预期年化增长率。 |\n| **`..._opp_...`** | **运营盈利 (Operating Profit)** | 公司主营业务产生的利润。 |\n| **`..._4wk_up`** | **4周内上调家数/幅度** | 衡量正面情绪的动量。 |\n| **`..._4wk_dn`** | **4周内下调家数/幅度** | 衡量负面情绪的动量。 |\n| **`..._hi`** | **最高预测值 (High Estimate)** | 代表最乐观的分析师观点。 |\n| **`..._lo`** | **最低预测值 (Low Estimate)** | 代表最悲观的分析师观点。 |\n| **`..._median`** | **预测中位数 (Median Estimate)** | 稳健的共识预测值。 |\n#### anl16: 个股分析师数据 (Individual Analyst)\n`anl16`系列数据代表了**单个分析师**的预测行为和数据。\n- **数据类型:** 数值型 (Float)。\n- **更新周期:** 事件驱动。\n| Datafield | 描述 | 经济学意义 |\n| :--- | :--- | :--- |\n| **`..._estvalue`** | **预测值 (Estimate Value)** | 单个分析师的最新预测。 |\n| **`..._beforecons_mean`** | **修正前的共识均值** | 衡量修正动作的基准。 |\n| **`..._afterest_difference`** | **修正后的差异** | 直接衡量单个分析师带来的“意外”（Surprise）的大小。 |\n---\n### **附录 B: 核心操作符字典 (Operator Dictionary)**\n* **注意:** 本字典是一个**动态文档**。当遇到新的`operator`时，应**从平台获取定义**并在此处更新。\n| 操作符 (Operator) | 分类 | 描述与数学意义 | Alpha构建中的典型用途 |\n| :--- | :--- | :--- | :--- |\n| **`add`, `subtract`, `multiply`, `divide`** | 算术 | 基本的加、减、乘、除运算。 | 构建比率（如利润率`divide(ebitda, sales)`）、差值（如动量`subtract(up, down)`）等核心经济学关系。 |\n| **`vec_avg`** | 聚合 | Vector Average. 计算一个数据字段在多个来源（如多位分析师）上的平均值。 | 将多个分析师的离散预测聚合成一个稳健的共识值。 |\n| **`vec_sum`** | 聚合 | Vector Sum. 计算数据字段在多个来源上的总和。 | 计算总的变动量，但对来源数量敏感。 |\n| **`vec_count`** | 聚合 | Vector Count. 计算提供了某个数据字段的来源数量。 | 衡量分析师覆盖度。 |\n| **`abs`** | 数学 | Absolute Value. 取绝对值。 | 关注变化的“幅度”而非“方向”。 |\n| **`log`** | 数学 | Natural Logarithm. 取自然对数。 | 平滑数据分布，降低极端值的影响，将乘法关系转为加法关系。 |\n| **`sqrt`** | 数学 | Square Root. 取平方根。 | 变换数据分布，常用于处理方差型数据。 |\n| **`power(a, b)`** | 数学 | Power. 计算 a 的 b 次方。 | 放大或缩小效应，但可能使经济学意义变得模糊。 |\n| **`inverse`** | 数学 | Inverse. 取倒数 (1/x)。 | 将高值变为低值，用于构建反向指标（如市盈率倒数）。 |\n| **`sign`** | 数学 | Signum function. 取符号（正为1，负为-1，零为0）。 | 只关心方向，不关心幅度，是一种极端的信息简化。 |\n| **`max`, `min`** | 比较 | 分别取两个或多个输入中的最大值或最小值。 | 选取最乐观/悲观的信号，或设置边界。 |\n| **`winsorize(data, std=N)`** | 数据清洗 | Winsorization. 将数据中超出N倍标准差的极端值，替换为N倍标准差处的边界值。 | 在保留数据主体分布的同时，有效控制极端异常值对结果的干扰，是比直接截断更优的处理方式。 |",
  "post_comments": [
    "建议补充具体效果和案例，或者展示出具体md文档的输出",
    "@WL13229 文档输出这两天补一下，效果对比过完本月",
    "希望能给写得更详细些。 能够让我依葫芦画瓢的搞定它。  哈哈，小白误入因子矿工"
  ]
}