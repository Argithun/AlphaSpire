{
  "title": "【MCP WorkFlow】MCP使用中的最大误区",
  "description": "大家好我是Vincent，最近看了论坛里大量关于mcp工作流的帖子，总感觉好像有哪里不得劲，有一种得出的每一步结论都踩不实的感觉，大家po出来的结果也因为各种原因无法复现，思考是否是提示词或模型问题，我相信尝试过的同学应该都有过类似的疑惑。  ...",
  "post_body": "大家好我是Vincent，最近看了论坛里大量关于mcp工作流的帖子，总感觉好像有哪里不得劲，有一种得出的每一步结论都踩不实的感觉，大家po出来的结果也因为各种原因无法复现，思考是否是提示词或模型问题，我相信尝试过的同学应该都有过类似的疑惑。\n今天在刷抖音的时候看到博主第四种黑猩猩的视频并去阅读了引用的原文，瞬间豁然开朗。\n原文链接如下，有能力的小伙伴可以直接看原文，本文仅结合日常alpha工作流说些自己的理解。\nWhy I'm Betting Against AI Agents in 2025 (Despite Building Them)——Utkarsh Kanwat\nhttps://utkarshkanwat.com/writing/betting-against-agents\n先说结论，最大误区既是：\n设置多个步骤的工作流，并寄希望于能一次运行完成所有工作，返回符合预期的alpha.\n理由：\n1、准确率问题\n假使你的工作流有10个步骤，每步的准确率有90%，10个步骤后的准确率仅剩(0.90^{10})，约34%，\n好比你花大价钱用的夯大力模型准确率提高到95%，20个步骤后的准确率也只剩36%。\n更要命的是，mcp的运行存在黑箱，你不清模型为什么会做这样的选择，异常后再去溯源费时费力不说，\n且就算你找到了问题，设法通过工作流文档或提示词去要求试图避免所产生，再来一次也不一定比这次好。\n说个最简单的，AI按加减乘除四则运算去组合datafield，如何避免量纲不匹配问题，是否有去深究？这样跑出来的alpha指标再好你敢用么。\n2、效率问题\n第一个方面，执行过程中的异常打转，鬼打墙。\n我使用的模型是gpt5,购买了trae国际版的PRO会员，按请求次数计费。\n拿最简单的第一步登录举例，就算我已经告诉他请直接从我系统中的环境变量获得账户信息，他依然进行了多次失败登录尝试才完成登录。\n这是最直观和简单的步骤，更多不直观和复杂的步骤可能根本就没有被留意到。\n后续在获取dataset，datafield信息时也经常出现单个工具的来回反复调用，我猜测是mcp工具并没有设置足够充分的异常处理机制。\n时间在消耗，token在燃烧，耐心在消失。\n第二个方面，回测效率，创建模板和筛选剪枝的效率。\n相信大家都已经有了相对成熟并且得到反复验证的回测器，工作流中有大量时间是花费在和模型交互上的，回测效率远没有拉满，筛选和剪枝的逻辑也是不明确的，甚至是随机的，很难让人信服。\n3、mcp工具自身问题\n如果把大模型比做大脑，mcp工具比做手脚，我们会理所当然的认为效果取决于模型的好坏，但实际中可能恰恰相反，mcp工具成了木桶中最短的那一块，其中的是否有足够多的重试和验证机制，是否返回了可以让大模型理解的足够精确的信息，才是最大的限制。\nmcp工具需要不断的在使用中调试，几乎不可能指望在一开始就把所有出现的情况都设想到。\n4、token消耗问题\n多步骤的长工作流的token消耗随步数呈指数级增加，还有一个最明显的感知就是约到后面的步骤消耗的时间就越久。目前我了解到的似乎已有将上下文设置成缓存的技术来解决此问题，有待进一步学习。\n解决方案：\n目前尝试有效的只有这一个笨办法，\n就是\n分布执行，对结果进行人工验证，不断追问依据，夯实每一步。\n不要去盲目追求自动驾驶，而是去设计可靠且高效的验证方案。\n大家一起把在使用中踩过的坑都收集起来，组合成一个针对单个步骤的mcp踩坑指南，远比给出一套不知道会生成什么结果的提示词更有意义。\n可靠性大于自主性，还是那句话，生成的alpha你自己是否愿意投钱？\n没有否定mcp工具的意思，恰恰相反，任何工具在明确其能力边界后才能更好的使用。\n但是期待全自动挖矿短期内看不大现实。只去鞭策AI干活很难得到一个好的结果，看来成功还是没有捷径。\n最后引用原文作者的另一篇文章中的观点做总结：\n“这些AI工具应被视为辅助工具而非替代品。\n关键在于，开发者需要懂得如何有效结合人工智能和传统工程，\n利用AI处理生成、理解和梳理任务，而对于核心逻辑和系统架构依然需要人为控制。\n总体来看，工具还在快速发展中，但不要盲信所有“自动化”的宣传，要理性认识它们的实际边界。”",
  "post_comments": [
    "诶嘿，有点像流水线良率问题，每个步骤都有每个步骤的缺陷，缺陷会累积，但是这个事情并非无解，做好每个步骤的质量管理即可。\n简单说就是可以限制AI的回复格式，对AI的回复，用一些函数做检测，判断是否正常和合规。\n另外你也提到了，效率没有拉满，所以有时候，量纲不匹配，资源充沛时，也可以盲目跑。\n我的方案是，比如A+B有信号了，那么再让机器试试，单独A和单独B，情况如何，如果单独一个，和原来结果差不多，那就是量纲不匹配嘛，就把另一个删掉。\n类似的，如果max(a,b)，有信号，也可以在提交前试试单独a或b，abs(a)也可以拆掉abs\n但是这些加班，减法，min，max是ai根据自己的理解写出来的，且是同一个数据集的，所以大概率还是有可能量纲匹配的～",
    "有机会我可以单独开一个帖子，讲我的AI驱动信号生成器的简易实现，但是打算下个季度，冲GM的人气用",
    "同意~ai做copilot可以，全部自动化怎么说呢，工作量大，考虑的edge case超多，是攀登珠穆朗玛峰级别的work！！！我做了worldquant-miner之后，真的落实到alpha提交全都是我手动一个一个当医生救活每个hopeful alpha的哈哈哈\ncontext engineering/agent现在dominates playing field, mcp时代比较久远了hhh\n还是需要评测一下mcp的实际出可提交alpha率，然后横向比较，目前我做的多臂老虎机的approach 单天孤立数据高质量alpha出货/simulation比率是4/1722 = 0.23%， 可提交alpha是50/1722 = 2.9%（基本上就是找到了一个所谓圣杯模板就开始一锅端了）， 这样我一天只做1722次simulation，却能保证4次提交过关的regular & power pool alpha   我观察了下非顾问的 submission/simulation比率，比率越低代表无效回测次数越多，平台算力资源浪费越严重，头部candidate比率也是在0.1~0.3%浮动，而且要求不高，不回测10年，没有corr，IS ladder等要求。\n虽说是新手保护期没到各种prod corr self corr的因子荒状态，但是逐渐开始我发现AI可能的确是在发现alpha，发现alpha模板中可能会有edge，发现因子的概率比机械brute-force效率更高。",
    "说得太对了，每一步的坑都感同身受。盲目追求全自动工作流确实本末倒置，最后只会得到一堆无法解释且不敢用的结果。分步执行、人工验证、不断追问依据，这才是目前最踏实可靠的路径。感谢分享，这盆冷水泼得及时，让大家都回归理性。工具是辅助，人的判断和掌控才是核心。\n===================================================================================",
    "VC17729\n点赞兄弟分享的经验，深有同感，我想大多数放手使用MCP的经历应该是相似的。\n登入不稳定，Token消耗大，执行流程不可控。\n不好的就如作者说的一样，我就简单分享自己的一点见解。\n#结论先行，MCP肯定有用，尽量功能单一，高端用户可以自制Agent系统。\n##MCP使用尽量功能单一\n-获取论坛文章，获取有用的价值，比如好的模板转为自己可用的模板格式，并写到本地文件。\n可针对这个元任务，写对应的Prompt，结合平台自带的写入文件的MCP，把价值点写下来存在.md文件， 供以后使用。\n##有能力自制Agent\n-我们使用 MCP的“黑箱”问题，需要一个，只是我们使用的平台的使用的Prompt合在一起，生成的调试计划没法监控， 有能力者可制作agent，进行监控，LangChain的框架可以了解一下。\n赞成大佬说的，单Agent能完成的不要用多Agent。\n总结一下，目前MCP的工具挺好，能自动读论坛文章，快速验证一下模板的想法。\n目前在Alpha 挖掘的生产级环境下还不稳定，还是用硬编码的稳定系统更优。",
    "最近在关注Agent 的设计，分享两篇分析关于MCP 以及多-Agent 幻觉以及上下文管理的文章。\nCognition  dont-build-multi-agents\nhttps://cognition.ai/blog/dont-build-multi-agents\nLangChain   Context Engineering\nhttps://blog.langchain.com/context-engineering-for-agents/",
    "老哥, 懂行 👍👍👍👍👍👍\n--------------------------------------------------------------------------------------------------------------------------------\n知识就是力量",
    "还在犹豫要不要学习下MCP，大佬们的讨论受益匪浅"
  ]
}